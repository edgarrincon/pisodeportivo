webpackHotUpdate("Piso Deportivo",{

/***/ "./packages/f1/src/components/pages/page.js":
/*!**************************************************!*\
  !*** ./packages/f1/src/components/pages/page.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../link */ \"./packages/f1/src/components/link.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../list */ \"./packages/f1/src/components/list/index.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}const Page=({state,actions,libraries})=>{// Get information about the current URL.\nconst data=state.source.get(state.router.link);// Get the data of the post.\nconst page=state.source[data.type][data.id];// Get the html2react component.\nconst Html2React=libraries.html2react.Component;/**\n   * Once the post has loaded in the DOM, prefetch both the\n   * home posts and the list component so if the user visits\n   * the home page, everything is ready and it loads instantly.\n   */Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(()=>{actions.source.fetch(\"/\");_list__WEBPACK_IMPORTED_MODULE_3__[\"default\"].preload();},[]);// Load the post, but only if the data is ready.\nreturn data.isReady?Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(ArticleContainer,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"post-title\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Title,{dangerouslySetInnerHTML:{__html:page.title.rendered}})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Content,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Html2React,{html:page.content.rendered})})]}):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Page));const ArticleContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"ebajkri2\",label:\"ArticleContainer\"})( false?undefined:{name:\"eney4m\",styles:\"width:100%;.post-title{text-align:center;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Title=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"h1\", false?undefined:{target:\"ebajkri1\",label:\"Title\"})( false?undefined:{name:\"xx9h0\",styles:\"margin-bottom:3.2rem\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxEZXNrdG9wXFxwaXNvZGVwb3J0aXZvXFxwYWNrYWdlc1xcZjFcXHNyY1xcY29tcG9uZW50c1xccGFnZXNcXHBhZ2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUR1QiIsImZpbGUiOiJEOlxcRGVza3RvcFxccGlzb2RlcG9ydGl2b1xccGFja2FnZXNcXGYxXFxzcmNcXGNvbXBvbmVudHNcXHBhZ2VzXFxwYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgTGluayBmcm9tIFwiLi4vbGlua1wiO1xuaW1wb3J0IExpc3QgZnJvbSBcIi4uL2xpc3RcIjtcblxuY29uc3QgUGFnZSA9ICh7IHN0YXRlLCBhY3Rpb25zLCBsaWJyYXJpZXMgfSkgPT4ge1xuICAvLyBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgVVJMLlxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuXG4gIC8vIEdldCB0aGUgaHRtbDJyZWFjdCBjb21wb25lbnQuXG4gIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cbiAgLyoqXG4gICAqIE9uY2UgdGhlIHBvc3QgaGFzIGxvYWRlZCBpbiB0aGUgRE9NLCBwcmVmZXRjaCBib3RoIHRoZVxuICAgKiBob21lIHBvc3RzIGFuZCB0aGUgbGlzdCBjb21wb25lbnQgc28gaWYgdGhlIHVzZXIgdmlzaXRzXG4gICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICovXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgYWN0aW9ucy5zb3VyY2UuZmV0Y2goXCIvXCIpO1xuICAgIExpc3QucHJlbG9hZCgpO1xuICB9LCBbXSk7XG5cbiAgLy8gTG9hZCB0aGUgcG9zdCwgYnV0IG9ubHkgaWYgdGhlIGRhdGEgaXMgcmVhZHkuXG4gIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgPEFydGljbGVDb250YWluZXI+XG4gICAgICB7XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9zdC10aXRsZVwiPlxuICAgICAgICAgIDxUaXRsZSBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IHBhZ2UudGl0bGUucmVuZGVyZWQgfX0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICB9XG5cbiAgICAgIHsvKiBSZW5kZXIgdGhlIGNvbnRlbnQgdXNpbmcgdGhlIEh0bWwyUmVhY3QgY29tcG9uZW50IHNvIHRoZSBIVE1MIGlzIHByb2Nlc3NlZFxuICAgICAgIGJ5IHRoZSBwcm9jZXNzb3JzIHdlIGluY2x1ZGVkIGluIHRoZSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5wcm9jZXNzb3JzIGFycmF5LiAqL31cbiAgICAgIDxDb250ZW50PlxuICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwYWdlLmNvbnRlbnQucmVuZGVyZWR9IC8+XG4gICAgICA8L0NvbnRlbnQ+XG4gICAgPC9BcnRpY2xlQ29udGFpbmVyPlxuICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUGFnZSk7XG5cbmNvbnN0IEFydGljbGVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgLnBvc3QtdGl0bGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuYDtcblxuY29uc3QgVGl0bGUgPSBzdHlsZWQuaDFgXG4gIG1hcmdpbi1ib3R0b206IDMuMnJlbTtcbmA7XG5cbi8qKlxuICogVGhpcyBjb21wb25lbnQgaXMgdGhlIHBhcmVudCBvZiB0aGUgYGNvbnRlbnQucmVuZGVyZWRgIEhUTUwuIFdlIGNhbiB1c2UgbmVzdGVkXG4gKiBzZWxlY3RvcnMgdG8gc3R5bGUgdGhhdCBIVE1MLlxuICovXG5jb25zdCBDb250ZW50ID0gc3R5bGVkLmRpdmBcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcblxuICAqIHtcbiAgICBtYXgtd2lkdGg6IDEzNjBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxuXG4gIHAge1xuICAgIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbiAgfVxuXG4gIGgxLFxuICBoMixcbiAgaDMsXG4gIGg0LFxuICBoNSxcbiAgaDYge1xuICAgIG1hcmdpbi1ib3R0b206IDEuOHJlbTtcbiAgfVxuXG4gIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgb2JqZWN0LXBvc2l0aW9uOiBjZW50ZXI7XG4gIH1cblxuICBmaWd1cmUge1xuICAgIG1hcmdpbjogMjRweCBhdXRvO1xuICAgIC8qIG5leHQgbGluZSBvdmVycmlkZXMgYW4gaW5saW5lIHN0eWxlIG9mIHRoZSBmaWd1cmUgZWxlbWVudC4gKi9cbiAgICAvLyB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuXG4gICAgZmlnY2FwdGlvbiB7XG4gICAgICBmb250LXNpemU6IDAuN2VtO1xuICAgIH1cbiAgfVxuXG4gIGlmcmFtZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cblxuICBibG9ja3F1b3RlIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCByZ2JhKDEyLCAxNywgNDMpO1xuICAgIHBhZGRpbmc6IDRweCAxNnB4O1xuICB9XG4gIC53cC1ibG9jay1idXR0b24sXG4gIC53cC1ibG9jay1jb2RlLFxuICAud3AtYmxvY2stcHJlZm9ybWF0dGVkIHtcbiAgICB3aWR0aDogYXV0bztcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICB9XG4gIC53cC1ibG9jay1idXR0b25fX2xpbmsge1xuICAgIGNvbG9yOiB2YXIoLS13aGl0ZSk7XG4gIH1cbiAgLndwLWJsb2NrLWVtYmVkIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMS41cmVtIGF1dG87XG4gICAgLndwLWJsb2NrLWVtYmVkX193cmFwcGVyIHtcbiAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwYWRkaW5nLXRvcDogNTYuMjUlO1xuICAgICAgfVxuICAgIH1cbiAgICBpZnJhbWUge1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgYm9yZGVyOiAwO1xuICAgIH1cbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogOTkycHgpIHtcbiAgICAud3AtYmxvY2stY29sdW1ucyB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xuICAgIH1cbiAgfVxuXG4gIC8qIElucHV0IGZpZWxkcyBzdHlsZXMgKi9cblxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuICBpbnB1dFt0eXBlPVwidXJsXCJdLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdLFxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbiAgdGV4dGFyZWEsXG4gIHNlbGVjdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogNnB4IDEycHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBjb2xvcjogIzQ5NTA1NztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDNyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjZWQ0ZGE7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIG91dGxpbmUtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHRyYW5zaXRpb246IG91dGxpbmUtY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4xNXMgZWFzZS1pbi1vdXQ7XG4gICAgbWFyZ2luOiA4cHggMCA0cHggMDtcblxuICAgICY6Zm9jdXMge1xuICAgICAgb3V0bGluZS1jb2xvcjogIzFmMzhjNTtcbiAgICB9XG4gIH1cblxuICBpbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgLW1zLXRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMxZjM4YzU7XG4gICAgcGFkZGluZzogMTJweCAzNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMS40Mjg1NzE0MztcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgY29sb3I6IHZhcigtLXdoaXRlKTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1icmFuZCk7XG4gIH1cblxuICAvKiBXb3JkUHJlc3MgQ29yZSBBbGlnbiBDbGFzc2VzICovXG5cbiAgQG1lZGlhIChtaW4td2lkdGg6IDQyMHB4KSB7XG4gICAgaW1nLmFsaWduY2VudGVyLFxuICAgIGltZy5hbGlnbmxlZnQsXG4gICAgaW1nLmFsaWducmlnaHQge1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgfVxuXG4gICAgLmFsaWduY2VudGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgfVxuXG4gICAgLmFsaWducmlnaHQge1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDI0cHg7XG4gICAgfVxuXG4gICAgLmFsaWdubGVmdCB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1yaWdodDogMjRweDtcbiAgICB9XG4gIH1cbiAgLyoqQ29udGFjdCBCbG9jayoqL1xuICAuY29udGFjdC1ibG9jayB7XG4gICAgYmFja2dyb3VuZDogI2Y4ZjhmYTtcbiAgICBwYWRkaW5nLXRvcDogMzRweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMzRweDtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgICBwYWRkaW5nLXRvcDogNzVweDtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA3NXB4O1xuICAgIH1cbiAgICAud3AtYmxvY2stZ3JvdXBfX2lubmVyLWNvbnRhaW5lciB7XG4gICAgICBtYXgtd2lkdGg6IDEwMzVweDtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgLndwLWJsb2NrLWNvbHVtbnMge1xuICAgICAgICAud3AtYmxvY2stY29sdW1uLmNvbnRhY3QtZGV0YWlscyB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICAgICAgICAuY29udGFjdC1tYXBzIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDI1N3B4O1xuICAgICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgICAgICAgICAgaWZyYW1lIHtcbiAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgIGhlaWdodDogMjU3cHg7XG4gICAgICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaDQge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMS4ycmVtO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAud3AtYmxvY2stY29sdW1uLmNvbnRhY3QtZm9ybSB7XG4gICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XG4gICAgICAgICAgfVxuICAgICAgICAgIC53cGNmNyB7XG4gICAgICAgICAgICAud3BjZjctZm9ybSB7XG4gICAgICAgICAgICAgIGxhYmVsIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAvKipDdXN0b20gc3R5bGUgZm9yIHBhZ2VzKiovXG4gIC8qKkFib3V0IEJsb2NrKiovXG4gIC5hYm91dC1oaWdobGlnaHQge1xuICAgIHBhZGRpbmctYm90dG9tOiAycmVtO1xuICAgIC53cC1ibG9jay1ncm91cF9faW5uZXItY29udGFpbmVyIHtcbiAgICAgIG1heC13aWR0aDogNTcxcHg7XG4gICAgfVxuICB9XG4gIC5hYm91dC1zZXJ2aWNlcyB7XG4gICAgYmFja2dyb3VuZDogI2Y4ZjhmYTtcbiAgICBwYWRkaW5nLXRvcDogMzRweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMzRweDtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgICBwYWRkaW5nLXRvcDogNzVweDtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA3NXB4O1xuICAgIH1cbiAgICAud3AtYmxvY2stZ3JvdXBfX2lubmVyLWNvbnRhaW5lciB7XG4gICAgICAuYWJvdXQtc2VydmljZXMtZ3JpZCB7XG4gICAgICAgIC53cC1ibG9jay1pbWFnZSB7XG4gICAgICAgICAgd2lkdGg6IDYycHggIWltcG9ydGFudDtcbiAgICAgICAgICBoZWlnaHQ6IDYycHg7XG4gICAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIH1cbiAgICAgICAgaDUge1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgICAgICAgbWFyZ2luLXRvcDogMXJlbTtcbiAgICAgICAgfVxuICAgICAgICBwIHtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLmFib3V0LXRlYW0ge1xuICAgIHBhZGRpbmctdG9wOiAzNHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAzNHB4O1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgICAgcGFkZGluZy10b3A6IDc1cHg7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogNzVweDtcbiAgICB9XG4gICAgLmhvbWUtdGVhbS1oZWFkaW5nIHtcbiAgICAgIC53cC1ibG9jay1ncm91cF9faW5uZXItY29udGFpbmVyIHtcbiAgICAgICAgbWF4LXdpZHRoOiA1MzlweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG4gICAgICB9XG4gICAgfVxuICAgIC53cC1ibG9jay1ncm91cF9faW5uZXItY29udGFpbmVyIHtcbiAgICAgIC53cC1ibG9jay1jb2x1bW5zIHtcbiAgICAgICAgLndwLWJsb2NrLWNvbHVtbiB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xuICAgICAgICAgIHAge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMHJlbTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLmFib3V0LXZpc2lvbiB7XG4gICAgcGFkZGluZy10b3A6IDM0cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDM0cHg7XG4gICAgYmFja2dyb3VuZDogI2Y4ZjhmYTtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgICBwYWRkaW5nLXRvcDogNzVweDtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA3NXB4O1xuICAgIH1cbiAgICAuYWJvdXQtdmlzaW9uLWhlYWRpbmcge1xuICAgICAgLndwLWJsb2NrLWdyb3VwX19pbm5lci1jb250YWluZXIge1xuICAgICAgICBtYXgtd2lkdGg6IDUzOXB4O1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogM3JlbTtcbiAgICAgIH1cbiAgICB9XG4gICAgLmFib3V0LXZpc2lvbi1ncmlkIHtcbiAgICAgIC53cC1ibG9jay1jb2x1bW4ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG4gICAgICAgIGg1IHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxLjJyZW07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLmFib3V0LXNlcnZpY2VzLXR3byB7XG4gICAgcGFkZGluZy10b3A6IDM0cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDM0cHg7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgICBwYWRkaW5nLXRvcDogNzVweDtcbiAgICAgIHBhZGRpbmctYm90dG9tOiA3NXB4O1xuICAgIH1cbiAgICAud3AtYmxvY2stZ3JvdXBfX2lubmVyLWNvbnRhaW5lciB7XG4gICAgICAud3AtYmxvY2stY29sdW1ucyB7XG4gICAgICAgIC53cC1ibG9jay1jb2x1bW4ge1xuICAgICAgICAgIG9sIHtcbiAgICAgICAgICAgIGNvdW50ZXItcmVzZXQ6IG15T3JkZXJlZENvdW50ZXI7XG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAycmVtO1xuICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAzcmVtO1xuICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICAgICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgY291bnRlci1pbmNyZW1lbnQ6IG15T3JkZXJlZENvdW50ZXI7XG4gICAgICAgICAgICAgICAgY29udGVudDogY291bnRlcihteU9yZGVyZWRDb3VudGVyKTtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYnJhbmQpO1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgICAgIHRvcDogNXB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgY29sb3I6IHZhcigtLXdoaXRlKTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDogMi41cHg7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLyoqU2VydmljZXMgUGFnZSAqKi9cbiAgLnNlcnZpY2VzLWhpZ2hsaWdodCB7XG4gICAgcGFkZGluZy1ib3R0b206IDJyZW07XG4gICAgLndwLWJsb2NrLWdyb3VwX19pbm5lci1jb250YWluZXIge1xuICAgICAgbWF4LXdpZHRoOiA1NzFweDtcbiAgICB9XG4gIH1cbiAgLmhlcm8tc2VydmljZXMge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nLXRvcDogMzRweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMzRweDtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgICAgIHBhZGRpbmctdG9wOiA3NXB4O1xuICAgICAgcGFkZGluZy1ib3R0b206IDc1cHg7XG4gICAgfVxuICAgIC53cC1ibG9jay1jb2x1bW5zIHtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIC53cC1ibG9jay1jb2x1bW4ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICB9XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgLndwLWJsb2NrLWJ1dHRvbiB7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICAud3AtYmxvY2stYnV0dG9uX19saW5rIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB2YXIoLS1icmFuZCk7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1icmFuZCk7XG4gICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA1cHggMHB4IHJnYigwIDAgMCAvIDAuNCk7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbjtcbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1ibGFjayk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC53cC1ibG9jay1idXR0b24uaXMtc3R5bGUtb3V0bGluZSB7XG4gICAgICAgIC53cC1ibG9jay1idXR0b25fX2xpbmsge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgICAgIGJvcmRlci1jb2xvcjogdmFyKC0tYnJhbmQpO1xuICAgICAgICAgIGNvbG9yOiB2YXIoLS1icmFuZCk7XG4gICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0tYmxhY2spO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAuaG9tZS1zZXJ2aWNlcy1pbWctbGVmdCB7XG4gICAgYmFja2dyb3VuZDogI2Y4ZjhmYTtcbiAgfVxuYDtcbiJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});/**\n * This component is the parent of the `content.rendered` HTML. We can use nested\n * selectors to style that HTML.\n */const Content=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"ebajkri0\",label:\"Content\"})( false?undefined:{name:\"8t6usb\",styles:\"word-break:break-word;*{max-width:1360px;width:100%;margin:0 auto;}p{margin-bottom:1.5rem;}h1,h2,h3,h4,h5,h6{margin-bottom:1.8rem;}img{width:100%;object-fit:cover;object-position:center;}figure{margin:24px auto;figcaption{font-size:0.7em;}}iframe{display:block;margin:0 auto;}blockquote{margin:0 auto;background-color:rgba(0, 0, 0, 0.1);border-left:4px solid rgba(12, 17, 43);padding:4px 16px;}.wp-block-button,.wp-block-code,.wp-block-preformatted{width:auto;margin-bottom:2rem;}.wp-block-button__link{color:var(--white);}.wp-block-embed{max-width:100%;position:relative;width:100%;margin:1.5rem auto;.wp-block-embed__wrapper{&::before{content:\\\"\\\";display:block;padding-top:56.25%;}}iframe{max-width:100%;height:100%;width:100%;position:absolute;top:0;left:0;border:0;}}@media (max-width: 992px){.wp-block-columns{padding-left:15px;padding-right:15px;}}input[type=\\\"text\\\"],input[type=\\\"email\\\"],input[type=\\\"url\\\"],input[type=\\\"tel\\\"],input[type=\\\"number\\\"],input[type=\\\"date\\\"],textarea,select{display:block;padding:6px 12px;font-size:16px;font-weight:400;line-height:1.5;color:#495057;width:100%;height:3rem;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:4px;outline-color:transparent;transition:outline-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;margin:8px 0 4px 0;&:focus{outline-color:#1f38c5;}}input[type=\\\"submit\\\"]{display:inline-block;margin-bottom:0;font-weight:400;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;background-image:none;border:1px solid #1f38c5;padding:12px 36px;font-size:14px;line-height:1.42857143;border-radius:4px;color:var(--white);background-color:var(--brand);}@media (min-width: 420px){img.aligncenter,img.alignleft,img.alignright{width:auto;}.aligncenter{display:block;margin-left:auto;margin-right:auto;}.alignright{float:right;margin-left:24px;}.alignleft{float:left;margin-right:24px;}}.contact-block{background:#f8f8fa;padding-top:34px;padding-bottom:34px;max-width:100%;@media (min-width: 992px){padding-top:75px;padding-bottom:75px;}.wp-block-group__inner-container{max-width:1035px;margin:0 auto;.wp-block-columns{.wp-block-column.contact-details{margin-bottom:2rem;.contact-maps{position:relative;display:block;width:100%;height:257px;padding:0;overflow:hidden;margin-bottom:2rem;iframe{position:absolute;top:0;bottom:0;left:0;width:100%;height:257px;border:0;}}h4{margin-bottom:1.2rem;}}.wp-block-column.contact-form{@media (min-width: 992px){padding-left:2rem;}.wpcf7{.wpcf7-form{label{display:block;}}}}}}}.about-highlight{padding-bottom:2rem;.wp-block-group__inner-container{max-width:571px;}}.about-services{background:#f8f8fa;padding-top:34px;padding-bottom:34px;max-width:100%;@media (min-width: 992px){padding-top:75px;padding-bottom:75px;}.wp-block-group__inner-container{.about-services-grid{.wp-block-image{width:62px!important;height:62px;margin:0 auto;}h5{margin-bottom:1rem;margin-top:1rem;}p{position:relative;}}}}.about-team{padding-top:34px;padding-bottom:34px;@media (min-width: 992px){padding-top:75px;padding-bottom:75px;}.home-team-heading{.wp-block-group__inner-container{max-width:539px;margin:0 auto;margin-bottom:3rem;}}.wp-block-group__inner-container{.wp-block-columns{.wp-block-column{margin-bottom:1.5rem;p{margin-bottom:0rem;}}}}}.about-vision{padding-top:34px;padding-bottom:34px;background:#f8f8fa;max-width:100%;@media (min-width: 992px){padding-top:75px;padding-bottom:75px;}.about-vision-heading{.wp-block-group__inner-container{max-width:539px;margin:0 auto;margin-bottom:3rem;}}.about-vision-grid{.wp-block-column{margin-bottom:1.5rem;h5{margin-bottom:1.2rem;}}}}.about-services-two{padding-top:34px;padding-bottom:34px;@media (min-width: 992px){padding-top:75px;padding-bottom:75px;}.wp-block-group__inner-container{.wp-block-columns{.wp-block-column{ol{counter-reset:myOrderedCounter;padding-left:0;margin-top:2rem;li{list-style-type:none;position:relative;padding-left:3rem;margin-bottom:1rem;&:before{counter-increment:myOrderedCounter;content:counter(myOrderedCounter);position:absolute;background-color:var(--brand);border-radius:50%;left:0;top:5px;width:30px;height:30px;text-align:center;color:var(--white);padding-top:2.5px;}}}}}}}.services-highlight{padding-bottom:2rem;.wp-block-group__inner-container{max-width:571px;}}.hero-services{max-width:100%;padding-top:34px;padding-bottom:34px;@media (min-width: 992px){padding-top:75px;padding-bottom:75px;}.wp-block-columns{max-width:100%;align-items:center;.wp-block-column{margin-bottom:2rem;max-width:100%;}.wp-block-button{width:auto;.wp-block-button__link{background:var(--brand);border:1px solid transparent;border-color:var(--brand);box-shadow:0px 2px 5px 0px rgb(0 0 0 / 0.4);transition:all 0.3s ease;margin-right:0.5rem;text-decoration:non;&:hover{color:var(--black);background:transparent;}}}.wp-block-button.is-style-outline{.wp-block-button__link{background:transparent;border-color:var(--brand);color:var(--brand);&:hover{color:var(--black);}}}}}.home-services-img-left{background:#f8f8fa;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/f1/src/components/pages/page.js\n");

/***/ })

})